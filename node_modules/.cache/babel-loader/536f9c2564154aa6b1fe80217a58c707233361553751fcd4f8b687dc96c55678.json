{"ast":null,"code":"var _jsxFileName = \"D:\\\\Service Company\\\\safeeditpdf\\\\src\\\\components\\\\ImageToPdf.jsx\",\n  _s = $RefreshSig$();\n// src/components/ImageToPdf.jsx\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageToPdf() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [blob, setBlob] = useState(null);\n  const handleConvert = async () => {\n    if (!file) return alert(\"‚ùó Please select an image\");\n    const formData = new FormData();\n    formData.append(\"file\", file); // ‚úÖ must be \"file\"\n    formData.append(\"type\", \"img-to-pdf\"); // ‚úÖ match backend\n\n    setLoading(true);\n    try {\n      const res = await fetch(\"http://localhost:5001/convert\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) throw new Error(await res.text());\n      const pdfBlob = await res.blob();\n      setBlob(pdfBlob);\n    } catch (err) {\n      console.error(\"‚ùå Error:\", err);\n      alert(\"Image to PDF failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const download = () => {\n    if (!blob) return;\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = file.name.replace(/\\.\\w+$/, \".pdf\");\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDDBC Image to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => {\n        setFile(e.target.files[0]);\n        setBlob(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      disabled: loading,\n      children: loading ? \"Converting...\" : \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), blob && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: download,\n      children: \"\\u2B07\\uFE0F Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageToPdf, \"wVfiIb+pGa8ll8ubxkrm3nH6axY=\");\n_c = ImageToPdf;\nexport default ImageToPdf;\nvar _c;\n$RefreshReg$(_c, \"ImageToPdf\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageToPdf","_s","file","setFile","loading","setLoading","blob","setBlob","handleConvert","alert","formData","FormData","append","res","fetch","method","body","ok","Error","text","pdfBlob","err","console","error","message","download","url","URL","createObjectURL","link","document","createElement","href","name","replace","click","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Service Company/safeeditpdf/src/components/ImageToPdf.jsx"],"sourcesContent":["// src/components/ImageToPdf.jsx\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ImageToPdf() {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [blob, setBlob] = useState(null);\r\n\r\n  const handleConvert = async () => {\r\n    if (!file) return alert(\"‚ùó Please select an image\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file); // ‚úÖ must be \"file\"\r\n    formData.append(\"type\", \"img-to-pdf\"); // ‚úÖ match backend\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(\"http://localhost:5001/convert\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!res.ok) throw new Error(await res.text());\r\n\r\n      const pdfBlob = await res.blob();\r\n      setBlob(pdfBlob);\r\n    } catch (err) {\r\n      console.error(\"‚ùå Error:\", err);\r\n      alert(\"Image to PDF failed: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const download = () => {\r\n    if (!blob) return;\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = file.name.replace(/\\.\\w+$/, \".pdf\");\r\n    link.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>üñº Image to PDF</h2>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => {\r\n          setFile(e.target.files[0]);\r\n          setBlob(null);\r\n        }}\r\n      />\r\n      <button onClick={handleConvert} disabled={loading}>\r\n        {loading ? \"Converting...\" : \"Convert\"}\r\n      </button>\r\n      {blob && <button onClick={download}>‚¨áÔ∏è Download</button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageToPdf;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}