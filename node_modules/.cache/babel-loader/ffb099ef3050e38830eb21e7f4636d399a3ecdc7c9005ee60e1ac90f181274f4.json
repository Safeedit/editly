{"ast":null,"code":"var _jsxFileName = \"D:\\\\Service Company\\\\safeeditpdf\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport jsPDF from \"jspdf\";\nimport mammoth from \"mammoth\";\nimport PdfToDocx from \"./components/PdfToDocx\";\nimport DocxToPdf from \"./components/DocxToPdf\";\nimport ImageToPdf from \"./components/ImageToPdf\";\nimport MergePdf from \"./components/MergePdf\";\nimport SplitPdf from \"./components/SplitPdf\";\nimport \"./App.css\";\nimport \"react-pdf/dist/Page/AnnotationLayer.css\";\nimport \"react-pdf/dist/Page/TextLayer.css\";\nimport OcrPdf from \"./components/OcrPdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nfunction App() {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [textElements, setTextElements] = useState([]);\n  const [selectedTextId, setSelectedTextId] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [fontSize, setFontSize] = useState(12);\n  const [fontColor, setFontColor] = useState(\"#000000\");\n  const [fontFamily, setFontFamily] = useState(\"Arial\");\n  const fileInputRef = useRef();\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type === \"application/pdf\") {\n      setPdfFile(file);\n      setTextElements([]);\n    }\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const handlePageClick = (e, pageIndex) => {\n    if (selectedTextId) return;\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const input = prompt(\"Enter text to insert:\");\n    if (input) {\n      setTextElements(prev => [...prev, {\n        id: Date.now(),\n        page: pageIndex,\n        x,\n        y,\n        text: input,\n        size: fontSize,\n        color: fontColor,\n        font: fontFamily,\n        bold: false,\n        italic: false,\n        underline: false\n      }]);\n    }\n  };\n  const handleDownload = async () => {\n    if (!pdfFile) return;\n    const arrayBuffer = await pdfFile.arrayBuffer();\n    const pdfDoc = await PDFDocument.load(arrayBuffer);\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    textElements.forEach(el => {\n      const page = pdfDoc.getPage(el.page);\n      const {\n        height\n      } = page.getSize();\n      page.drawText(el.text, {\n        x: el.x,\n        y: height - el.y - el.size,\n        size: el.size,\n        font: helveticaFont,\n        color: rgb(parseInt(el.color.slice(1, 3), 16) / 255, parseInt(el.color.slice(3, 5), 16) / 255, parseInt(el.color.slice(5, 7), 16) / 255)\n      });\n    });\n    const modifiedPdf = await pdfDoc.save();\n    const blob = new Blob([modifiedPdf], {\n      type: \"application/pdf\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"EditedPDF.pdf\";\n    link.click();\n  };\n  const startDrag = (e, id) => {\n    e.stopPropagation();\n    const el = textElements.find(t => t.id === id);\n    setSelectedTextId(id);\n    setDragOffset({\n      x: e.clientX - el.x,\n      y: e.clientY - el.y\n    });\n  };\n  const onDrag = e => {\n    if (!selectedTextId) return;\n    setTextElements(prev => prev.map(t => t.id === selectedTextId ? {\n      ...t,\n      x: e.clientX - dragOffset.x,\n      y: e.clientY - dragOffset.y\n    } : t));\n  };\n  const stopDrag = () => setSelectedTextId(null);\n  const updateText = (id, newText) => {\n    setTextElements(prev => prev.map(el => el.id === id ? {\n      ...el,\n      text: newText\n    } : el));\n  };\n  const exportAnnotations = () => {\n    const blob = new Blob([JSON.stringify(textElements, null, 2)], {\n      type: \"application/json\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"annotations.json\";\n    link.click();\n  };\n  const importAnnotations = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = ev => {\n        const annotations = JSON.parse(ev.target.result);\n        setTextElements(annotations);\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleDocxToPDF = () => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \".docx\";\n    input.onchange = async e => {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onload = async event => {\n        const arrayBuffer = event.target.result;\n        const result = await mammoth.convertToHtml({\n          arrayBuffer\n        });\n        const doc = new jsPDF();\n        doc.html(result.value, {\n          callback: doc => doc.save(\"converted.pdf\"),\n          x: 10,\n          y: 10\n        });\n      };\n      reader.readAsArrayBuffer(file);\n    };\n    input.click();\n  };\n  const handleImageToPDF = () => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"image/*\";\n    input.onchange = e => {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onload = event => {\n        const img = new Image();\n        img.src = event.target.result;\n        img.onload = () => {\n          const pdf = new jsPDF();\n          pdf.addImage(img, \"JPEG\", 10, 10, 190, 270);\n          pdf.save(\"image.pdf\");\n        };\n      };\n      reader.readAsDataURL(file);\n    };\n    input.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    onMouseMove: onDrag,\n    onMouseUp: stopDrag,\n    onClick: () => setSelectedTextId(null),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDD SafeEditPDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tools-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC4 Convert PDF \\u27A1\\uFE0F DOCX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PdfToDocx, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC4 DOCX \\u27A1\\uFE0F PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DocxToPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDDBC\\uFE0F Image \\u27A1\\uFE0F PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageToPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD17 Merge PDFs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MergePdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u2702\\uFE0F Split PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SplitPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDDDC Compress PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CompressPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD0D OCR PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OcrPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), pdfFile && /*#__PURE__*/_jsxDEV(Document, {\n      file: pdfFile,\n      onLoadSuccess: onDocumentLoadSuccess,\n      className: \"pdf-container\",\n      children: Array.from(new Array(numPages), (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: index + 1,\n          width: 600,\n          onClick: e => handlePageClick(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: 600,\n            height: \"100%\"\n          },\n          children: textElements.filter(t => t.page === index).map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              left: t.x,\n              top: t.y,\n              fontSize: t.size,\n              fontFamily: t.font,\n              color: t.color,\n              fontWeight: t.bold ? \"bold\" : \"normal\",\n              fontStyle: t.italic ? \"italic\" : \"normal\",\n              textDecoration: t.underline ? \"underline\" : \"none\",\n              cursor: \"move\",\n              background: \"#fff\",\n              padding: \"2px\",\n              border: \"1px dashed #ccc\"\n            },\n            onMouseDown: e => startDrag(e, t.id),\n            onDoubleClick: () => {\n              const newText = prompt(\"Edit text:\", t.text);\n              if (newText) updateText(t.id, newText);\n            },\n            children: t.text\n          }, t.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CIy5+EeiuTF8fkllso8hBbMJtHQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Document","Page","pdfjs","PDFDocument","rgb","StandardFonts","jsPDF","mammoth","PdfToDocx","DocxToPdf","ImageToPdf","MergePdf","SplitPdf","OcrPdf","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","App","_s","pdfFile","setPdfFile","numPages","setNumPages","textElements","setTextElements","selectedTextId","setSelectedTextId","dragOffset","setDragOffset","x","y","fontSize","setFontSize","fontColor","setFontColor","fontFamily","setFontFamily","fileInputRef","handleFileChange","e","file","target","files","type","onDocumentLoadSuccess","handlePageClick","pageIndex","rect","getBoundingClientRect","clientX","left","clientY","top","input","prompt","prev","id","Date","now","page","text","size","color","font","bold","italic","underline","handleDownload","arrayBuffer","pdfDoc","load","helveticaFont","embedFont","Helvetica","forEach","el","getPage","height","getSize","drawText","parseInt","slice","modifiedPdf","save","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","startDrag","stopPropagation","find","t","onDrag","map","stopDrag","updateText","newText","exportAnnotations","JSON","stringify","importAnnotations","reader","FileReader","onload","ev","annotations","parse","result","readAsText","handleDocxToPDF","accept","onchange","event","convertToHtml","doc","html","value","callback","readAsArrayBuffer","handleImageToPDF","img","Image","src","pdf","addImage","readAsDataURL","className","onMouseMove","onMouseUp","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","CompressPdf","onLoadSuccess","Array","from","_","index","style","position","marginBottom","pageNumber","width","filter","fontWeight","fontStyle","textDecoration","cursor","background","padding","border","onMouseDown","onDoubleClick","_c","$RefreshReg$"],"sources":["D:/Service Company/safeeditpdf/src/App.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\r\nimport jsPDF from \"jspdf\";\r\nimport mammoth from \"mammoth\";\r\nimport PdfToDocx from \"./components/PdfToDocx\";\r\nimport DocxToPdf from \"./components/DocxToPdf\";\r\nimport ImageToPdf from \"./components/ImageToPdf\";\r\nimport MergePdf from \"./components/MergePdf\";\r\nimport SplitPdf from \"./components/SplitPdf\";\r\nimport \"./App.css\";\r\nimport \"react-pdf/dist/Page/AnnotationLayer.css\";\r\nimport \"react-pdf/dist/Page/TextLayer.css\";\r\nimport OcrPdf from \"./components/OcrPdf\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nfunction App() {\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [textElements, setTextElements] = useState([]);\r\n  const [selectedTextId, setSelectedTextId] = useState(null);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [fontSize, setFontSize] = useState(12);\r\n  const [fontColor, setFontColor] = useState(\"#000000\");\r\n  const [fontFamily, setFontFamily] = useState(\"Arial\");\r\n  const fileInputRef = useRef();\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type === \"application/pdf\") {\r\n      setPdfFile(file);\r\n      setTextElements([]);\r\n    }\r\n  };\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  const handlePageClick = (e, pageIndex) => {\r\n    if (selectedTextId) return;\r\n    const rect = e.target.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    const input = prompt(\"Enter text to insert:\");\r\n    if (input) {\r\n      setTextElements((prev) => [\r\n        ...prev,\r\n        {\r\n          id: Date.now(),\r\n          page: pageIndex,\r\n          x,\r\n          y,\r\n          text: input,\r\n          size: fontSize,\r\n          color: fontColor,\r\n          font: fontFamily,\r\n          bold: false,\r\n          italic: false,\r\n          underline: false,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async () => {\r\n    if (!pdfFile) return;\r\n    const arrayBuffer = await pdfFile.arrayBuffer();\r\n    const pdfDoc = await PDFDocument.load(arrayBuffer);\r\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n\r\n    textElements.forEach((el) => {\r\n      const page = pdfDoc.getPage(el.page);\r\n      const { height } = page.getSize();\r\n      page.drawText(el.text, {\r\n        x: el.x,\r\n        y: height - el.y - el.size,\r\n        size: el.size,\r\n        font: helveticaFont,\r\n        color: rgb(\r\n          parseInt(el.color.slice(1, 3), 16) / 255,\r\n          parseInt(el.color.slice(3, 5), 16) / 255,\r\n          parseInt(el.color.slice(5, 7), 16) / 255\r\n        ),\r\n      });\r\n    });\r\n\r\n    const modifiedPdf = await pdfDoc.save();\r\n    const blob = new Blob([modifiedPdf], { type: \"application/pdf\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"EditedPDF.pdf\";\r\n    link.click();\r\n  };\r\n\r\n  const startDrag = (e, id) => {\r\n    e.stopPropagation();\r\n    const el = textElements.find((t) => t.id === id);\r\n    setSelectedTextId(id);\r\n    setDragOffset({ x: e.clientX - el.x, y: e.clientY - el.y });\r\n  };\r\n\r\n  const onDrag = (e) => {\r\n    if (!selectedTextId) return;\r\n    setTextElements((prev) =>\r\n      prev.map((t) =>\r\n        t.id === selectedTextId\r\n          ? { ...t, x: e.clientX - dragOffset.x, y: e.clientY - dragOffset.y }\r\n          : t\r\n      )\r\n    );\r\n  };\r\n\r\n  const stopDrag = () => setSelectedTextId(null);\r\n\r\n  const updateText = (id, newText) => {\r\n    setTextElements((prev) =>\r\n      prev.map((el) => (el.id === id ? { ...el, text: newText } : el))\r\n    );\r\n  };\r\n\r\n  const exportAnnotations = () => {\r\n    const blob = new Blob([JSON.stringify(textElements, null, 2)], {\r\n      type: \"application/json\",\r\n    });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"annotations.json\";\r\n    link.click();\r\n  };\r\n\r\n  const importAnnotations = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (ev) => {\r\n        const annotations = JSON.parse(ev.target.result);\r\n        setTextElements(annotations);\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const handleDocxToPDF = () => {\r\n    const input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = \".docx\";\r\n    input.onchange = async (e) => {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = async (event) => {\r\n        const arrayBuffer = event.target.result;\r\n        const result = await mammoth.convertToHtml({ arrayBuffer });\r\n        const doc = new jsPDF();\r\n        doc.html(result.value, {\r\n          callback: (doc) => doc.save(\"converted.pdf\"),\r\n          x: 10,\r\n          y: 10,\r\n        });\r\n      };\r\n      reader.readAsArrayBuffer(file);\r\n    };\r\n    input.click();\r\n  };\r\n\r\n  const handleImageToPDF = () => {\r\n    const input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = \"image/*\";\r\n    input.onchange = (e) => {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const img = new Image();\r\n        img.src = event.target.result;\r\n        img.onload = () => {\r\n          const pdf = new jsPDF();\r\n          pdf.addImage(img, \"JPEG\", 10, 10, 190, 270);\r\n          pdf.save(\"image.pdf\");\r\n        };\r\n      };\r\n      reader.readAsDataURL(file);\r\n    };\r\n    input.click();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      onMouseMove={onDrag}\r\n      onMouseUp={stopDrag}\r\n      onClick={() => setSelectedTextId(null)}\r\n    >\r\n      <h1>📝 SafeEditPDF</h1>\r\n\r\n  \r\n      {/* Tools Section - Well Styled */}\r\n      <div className=\"tools-group\">\r\n        <div className=\"tool-box\">\r\n          <h3>📄 Convert PDF ➡️ DOCX</h3>\r\n          <PdfToDocx />\r\n        </div>\r\n        <div className=\"tool-box\">\r\n          <h3>📄 DOCX ➡️ PDF</h3>\r\n          <DocxToPdf />\r\n        </div>\r\n        <div className=\"tool-box\">\r\n          <h3>🖼️ Image ➡️ PDF</h3>\r\n          <ImageToPdf />\r\n        </div>\r\n        <div className=\"tool-box\">\r\n          <h3>🔗 Merge PDFs</h3>\r\n          <MergePdf />\r\n        </div>\r\n        <div className=\"tool-box\">\r\n          <h3>✂️ Split PDF</h3>\r\n          <SplitPdf />\r\n        </div>\r\n        <div className=\"tool-box\">\r\n          <h3>🗜 Compress PDF</h3>\r\n          <CompressPdf />\r\n        </div>\r\n        <div className=\"tool-box\">\r\n          <h3>🔍 OCR PDF</h3>\r\n          <OcrPdf />\r\n        </div>\r\n      </div>\r\n\r\n      {pdfFile && (\r\n        <Document file={pdfFile} onLoadSuccess={onDocumentLoadSuccess} className=\"pdf-container\">\r\n          {Array.from(new Array(numPages), (_, index) => (\r\n            <div key={index} style={{ position: \"relative\", marginBottom: \"1rem\" }}>\r\n              <Page pageNumber={index + 1} width={600} onClick={(e) => handlePageClick(e, index)} />\r\n              <div className=\"overlay\" style={{ position: \"absolute\", top: 0, left: 0, width: 600, height: \"100%\" }}>\r\n                {textElements\r\n                  .filter((t) => t.page === index)\r\n                  .map((t) => (\r\n                    <div\r\n                      key={t.id}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: t.x,\r\n                        top: t.y,\r\n                        fontSize: t.size,\r\n                        fontFamily: t.font,\r\n                        color: t.color,\r\n                        fontWeight: t.bold ? \"bold\" : \"normal\",\r\n                        fontStyle: t.italic ? \"italic\" : \"normal\",\r\n                        textDecoration: t.underline ? \"underline\" : \"none\",\r\n                        cursor: \"move\",\r\n                        background: \"#fff\",\r\n                        padding: \"2px\",\r\n                        border: \"1px dashed #ccc\",\r\n                      }}\r\n                      onMouseDown={(e) => startDrag(e, t.id)}\r\n                      onDoubleClick={() => {\r\n                        const newText = prompt(\"Edit text:\", t.text);\r\n                        if (newText) updateText(t.id, newText);\r\n                      }}\r\n                    >\r\n                      {t.text}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Document>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}