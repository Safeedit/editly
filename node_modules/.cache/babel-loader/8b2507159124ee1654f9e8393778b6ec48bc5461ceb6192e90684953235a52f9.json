{"ast":null,"code":"var _jsxFileName = \"D:\\\\Service Company\\\\safeeditpdf\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport PdfToDocx from \"./PdfToDocx\";\nimport DocxToPdf from \"./DocxToPdf\";\nimport ImageToPdf from \"./ImageToPdf\";\nimport MergePdf from \"./MergePdf\";\nimport SplitPdf from \"./SplitPdf\";\nimport CompressPdf from \"./CompressPdf\";\nimport OcrPdf from \"./OcrPdf\";\nimport PasswordProtect from \"./PasswordProtect\";\nimport ReorderPdf from \"./ReorderPdf\";\nimport \"react-pdf/dist/Page/AnnotationLayer.css\";\nimport \"react-pdf/dist/Page/TextLayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nfunction App() {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [textElements, setTextElements] = useState([]);\n  const [selectedTextId, setSelectedTextId] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [fontSize, setFontSize] = useState(12);\n  const [fontColor, setFontColor] = useState(\"#000000\");\n  const [fontFamily, setFontFamily] = useState(\"Arial\");\n  const fileInputRef = useRef();\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type === \"application/pdf\") {\n      setPdfFile(file);\n      setTextElements([]);\n    }\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const handlePageClick = (e, pageIndex) => {\n    if (selectedTextId) return;\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const input = prompt(\"Enter text to insert:\");\n    if (input) {\n      setTextElements(prev => [...prev, {\n        id: Date.now(),\n        page: pageIndex,\n        x,\n        y,\n        text: input,\n        size: fontSize,\n        color: fontColor,\n        font: fontFamily,\n        bold: false,\n        italic: false,\n        underline: false\n      }]);\n    }\n  };\n  const handleDownload = async () => {\n    if (!pdfFile) return;\n    const arrayBuffer = await pdfFile.arrayBuffer();\n    const pdfDoc = await PDFDocument.load(arrayBuffer);\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    textElements.forEach(el => {\n      const page = pdfDoc.getPage(el.page);\n      const {\n        height\n      } = page.getSize();\n      page.drawText(el.text, {\n        x: el.x,\n        y: height - el.y - el.size,\n        size: el.size,\n        font: helveticaFont,\n        color: rgb(parseInt(el.color.slice(1, 3), 16) / 255, parseInt(el.color.slice(3, 5), 16) / 255, parseInt(el.color.slice(5, 7), 16) / 255)\n      });\n    });\n    const modifiedPdf = await pdfDoc.save();\n    const blob = new Blob([modifiedPdf], {\n      type: \"application/pdf\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"EditedPDF.pdf\";\n    link.click();\n  };\n  const startDrag = (e, id) => {\n    e.stopPropagation();\n    const el = textElements.find(t => t.id === id);\n    setSelectedTextId(id);\n    setDragOffset({\n      x: e.clientX - el.x,\n      y: e.clientY - el.y\n    });\n  };\n  const onDrag = e => {\n    if (!selectedTextId) return;\n    setTextElements(prev => prev.map(t => t.id === selectedTextId ? {\n      ...t,\n      x: e.clientX - dragOffset.x,\n      y: e.clientY - dragOffset.y\n    } : t));\n  };\n  const stopDrag = () => setSelectedTextId(null);\n  const updateText = (id, newText) => {\n    setTextElements(prev => prev.map(el => el.id === id ? {\n      ...el,\n      text: newText\n    } : el));\n  };\n  const exportAnnotations = () => {\n    const blob = new Blob([JSON.stringify(textElements, null, 2)], {\n      type: \"application/json\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"annotations.json\";\n    link.click();\n  };\n  const importAnnotations = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = ev => {\n        const annotations = JSON.parse(ev.target.result);\n        setTextElements(annotations);\n      };\n      reader.readAsText(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    onMouseMove: onDrag,\n    onMouseUp: stopDrag,\n    onClick: () => setSelectedTextId(null),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDD SafeEditPDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tools-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(PdfToDocx, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(DocxToPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(ImageToPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(MergePdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(SplitPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(CompressPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(OcrPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(PasswordProtect, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-box\",\n        children: /*#__PURE__*/_jsxDEV(ReorderPdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CIy5+EeiuTF8fkllso8hBbMJtHQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["PdfToDocx","DocxToPdf","ImageToPdf","MergePdf","SplitPdf","CompressPdf","OcrPdf","PasswordProtect","ReorderPdf","jsxDEV","_jsxDEV","pdfjs","GlobalWorkerOptions","workerSrc","version","App","_s","pdfFile","setPdfFile","useState","numPages","setNumPages","textElements","setTextElements","selectedTextId","setSelectedTextId","dragOffset","setDragOffset","x","y","fontSize","setFontSize","fontColor","setFontColor","fontFamily","setFontFamily","fileInputRef","useRef","handleFileChange","e","file","target","files","type","onDocumentLoadSuccess","handlePageClick","pageIndex","rect","getBoundingClientRect","clientX","left","clientY","top","input","prompt","prev","id","Date","now","page","text","size","color","font","bold","italic","underline","handleDownload","arrayBuffer","pdfDoc","PDFDocument","load","helveticaFont","embedFont","StandardFonts","Helvetica","forEach","el","getPage","height","getSize","drawText","rgb","parseInt","slice","modifiedPdf","save","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","startDrag","stopPropagation","find","t","onDrag","map","stopDrag","updateText","newText","exportAnnotations","JSON","stringify","importAnnotations","reader","FileReader","onload","ev","annotations","parse","result","readAsText","className","onMouseMove","onMouseUp","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Service Company/safeeditpdf/src/components/Home.jsx"],"sourcesContent":["import PdfToDocx from \"./PdfToDocx\";\r\nimport DocxToPdf from \"./DocxToPdf\";\r\nimport ImageToPdf from \"./ImageToPdf\";\r\nimport MergePdf from \"./MergePdf\";\r\nimport SplitPdf from \"./SplitPdf\";\r\nimport CompressPdf from \"./CompressPdf\";\r\nimport OcrPdf from \"./OcrPdf\";\r\nimport PasswordProtect from \"./PasswordProtect\";\r\nimport ReorderPdf from \"./ReorderPdf\";\r\n\r\n\r\n\r\n\r\nimport \"react-pdf/dist/Page/AnnotationLayer.css\";\r\nimport \"react-pdf/dist/Page/TextLayer.css\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\n\r\n\r\nfunction App() {\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [textElements, setTextElements] = useState([]);\r\n  const [selectedTextId, setSelectedTextId] = useState(null);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n\r\n  const [fontSize, setFontSize] = useState(12);\r\n  const [fontColor, setFontColor] = useState(\"#000000\");\r\n  const [fontFamily, setFontFamily] = useState(\"Arial\");\r\n\r\n  const fileInputRef = useRef();\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type === \"application/pdf\") {\r\n      setPdfFile(file);\r\n      setTextElements([]);\r\n    }\r\n  };\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  const handlePageClick = (e, pageIndex) => {\r\n    if (selectedTextId) return;\r\n\r\n    const rect = e.target.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    const input = prompt(\"Enter text to insert:\");\r\n\r\n    if (input) {\r\n      setTextElements((prev) => [\r\n        ...prev,\r\n        {\r\n          id: Date.now(),\r\n          page: pageIndex,\r\n          x,\r\n          y,\r\n          text: input,\r\n          size: fontSize,\r\n          color: fontColor,\r\n          font: fontFamily,\r\n          bold: false,\r\n          italic: false,\r\n          underline: false,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async () => {\r\n    if (!pdfFile) return;\r\n\r\n    const arrayBuffer = await pdfFile.arrayBuffer();\r\n    const pdfDoc = await PDFDocument.load(arrayBuffer);\r\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n\r\n    textElements.forEach((el) => {\r\n      const page = pdfDoc.getPage(el.page);\r\n      const { height } = page.getSize();\r\n      page.drawText(el.text, {\r\n        x: el.x,\r\n        y: height - el.y - el.size,\r\n        size: el.size,\r\n        font: helveticaFont,\r\n        color: rgb(\r\n          parseInt(el.color.slice(1, 3), 16) / 255,\r\n          parseInt(el.color.slice(3, 5), 16) / 255,\r\n          parseInt(el.color.slice(5, 7), 16) / 255\r\n        ),\r\n      });\r\n    });\r\n\r\n    const modifiedPdf = await pdfDoc.save();\r\n    const blob = new Blob([modifiedPdf], { type: \"application/pdf\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"EditedPDF.pdf\";\r\n    link.click();\r\n  };\r\n\r\n  const startDrag = (e, id) => {\r\n    e.stopPropagation();\r\n    const el = textElements.find((t) => t.id === id);\r\n    setSelectedTextId(id);\r\n    setDragOffset({ x: e.clientX - el.x, y: e.clientY - el.y });\r\n  };\r\n\r\n  const onDrag = (e) => {\r\n    if (!selectedTextId) return;\r\n    setTextElements((prev) =>\r\n      prev.map((t) =>\r\n        t.id === selectedTextId\r\n          ? { ...t, x: e.clientX - dragOffset.x, y: e.clientY - dragOffset.y }\r\n          : t\r\n      )\r\n    );\r\n  };\r\n\r\n  const stopDrag = () => setSelectedTextId(null);\r\n\r\n  const updateText = (id, newText) => {\r\n    setTextElements((prev) =>\r\n      prev.map((el) => (el.id === id ? { ...el, text: newText } : el))\r\n    );\r\n  };\r\n\r\n  const exportAnnotations = () => {\r\n    const blob = new Blob([JSON.stringify(textElements, null, 2)], {\r\n      type: \"application/json\",\r\n    });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"annotations.json\";\r\n    link.click();\r\n  };\r\n\r\n  const importAnnotations = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (ev) => {\r\n        const annotations = JSON.parse(ev.target.result);\r\n        setTextElements(annotations);\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <div\r\n      className=\"container\"\r\n      onMouseMove={onDrag}\r\n      onMouseUp={stopDrag}\r\n      onClick={() => setSelectedTextId(null)}\r\n    >\r\n      <h1>📝 SafeEditPDF</h1>\r\n\r\n      <div className=\"tools-group\">\r\n        <div className=\"tool-box\"><PdfToDocx /></div>\r\n        <div className=\"tool-box\"><DocxToPdf /></div>\r\n        <div className=\"tool-box\"><ImageToPdf /></div>\r\n        <div className=\"tool-box\"><MergePdf /></div>\r\n        <div className=\"tool-box\"><SplitPdf /></div>\r\n        <div className=\"tool-box\"><CompressPdf /></div>\r\n        <div className=\"tool-box\"><OcrPdf /></div>\r\n        <div className=\"tool-box\"><PasswordProtect /></div>\r\n        <div className=\"tool-box\"><ReorderPdf /></div>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}