{"ast":null,"code":"var _jsxFileName = \"D:\\\\Service Company\\\\safeeditpdf\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// Let's start with the most critical file: src/App.jsx\n\nimport React, { useState, useRef } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport \"react-pdf/dist/esm/Page/TextLayer.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [editText, setEditText] = useState(\"\");\n  const [editedPdfUrl, setEditedPdfUrl] = useState(null);\n  const inputRef = useRef();\n  const onFileChange = e => {\n    const f = e.target.files[0];\n    if (f && f.type === \"application/pdf\") {\n      setFile(f);\n    }\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const addTextToPDF = async () => {\n    if (!file) return;\n    const existingPdfBytes = await file.arrayBuffer();\n    const pdfDoc = await PDFDocument.load(existingPdfBytes);\n    const pages = pdfDoc.getPages();\n    const firstPage = pages[0];\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    const {\n      width,\n      height\n    } = firstPage.getSize();\n    firstPage.drawText(editText, {\n      x: 50,\n      y: height - 100,\n      size: 18,\n      font,\n      color: rgb(0, 0, 0)\n    });\n    const modifiedBytes = await pdfDoc.save();\n    const blob = new Blob([modifiedBytes], {\n      type: \"application/pdf\"\n    });\n    setEditedPdfUrl(URL.createObjectURL(blob));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDD SafeEditPDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: inputRef,\n      onChange: onFileChange,\n      accept: \"application/pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Document, {\n          file: file,\n          onLoadSuccess: onDocumentLoadSuccess,\n          children: Array.from(new Array(numPages), (_, index) => /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: index + 1,\n            width: 600\n          }, index + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter text to insert\",\n        value: editText,\n        onChange: e => setEditText(e.target.value),\n        className: \"text-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTextToPDF,\n        className: \"edit-button\",\n        children: \"\\u270F\\uFE0F Insert Text & Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), editedPdfUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: editedPdfUrl,\n      download: \"edited.pdf\",\n      className: \"download-link\",\n      children: \"\\u2B07\\uFE0F Download Edited PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2PSSWopCANFvu+qnPU0nSuQRcMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","pdfjs","Document","Page","PDFDocument","rgb","StandardFonts","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","version","App","_s","file","setFile","numPages","setNumPages","editText","setEditText","editedPdfUrl","setEditedPdfUrl","inputRef","onFileChange","e","f","target","files","type","onDocumentLoadSuccess","addTextToPDF","existingPdfBytes","arrayBuffer","pdfDoc","load","pages","getPages","firstPage","font","embedFont","Helvetica","width","height","getSize","drawText","x","y","size","color","modifiedBytes","save","blob","Blob","URL","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","accept","style","display","justifyContent","onLoadSuccess","Array","from","_","index","pageNumber","placeholder","value","onClick","href","download","_c","$RefreshReg$"],"sources":["D:/Service Company/safeeditpdf/src/App.jsx"],"sourcesContent":["// Let's start with the most critical file: src/App.jsx\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport { pdfjs, Document, Page } from \"react-pdf\";\r\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\r\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\r\nimport \"react-pdf/dist/esm/Page/TextLayer.css\";\r\nimport \"./App.css\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc =\r\n  `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [editText, setEditText] = useState(\"\");\r\n  const [editedPdfUrl, setEditedPdfUrl] = useState(null);\r\n  const inputRef = useRef();\r\n\r\n  const onFileChange = (e) => {\r\n    const f = e.target.files[0];\r\n    if (f && f.type === \"application/pdf\") {\r\n      setFile(f);\r\n    }\r\n  };\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  const addTextToPDF = async () => {\r\n    if (!file) return;\r\n    const existingPdfBytes = await file.arrayBuffer();\r\n    const pdfDoc = await PDFDocument.load(existingPdfBytes);\r\n    const pages = pdfDoc.getPages();\r\n    const firstPage = pages[0];\r\n\r\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n    const { width, height } = firstPage.getSize();\r\n\r\n    firstPage.drawText(editText, {\r\n      x: 50,\r\n      y: height - 100,\r\n      size: 18,\r\n      font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n\r\n    const modifiedBytes = await pdfDoc.save();\r\n    const blob = new Blob([modifiedBytes], { type: \"application/pdf\" });\r\n    setEditedPdfUrl(URL.createObjectURL(blob));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>üìù SafeEditPDF</h1>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        onChange={onFileChange}\r\n        accept=\"application/pdf\"\r\n      />\r\n\r\n      {file && (\r\n        <>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n              {Array.from(new Array(numPages), (_, index) => (\r\n                <Page key={index + 1} pageNumber={index + 1} width={600} />\r\n              ))}\r\n            </Document>\r\n          </div>\r\n          <textarea\r\n            placeholder=\"Enter text to insert\"\r\n            value={editText}\r\n            onChange={(e) => setEditText(e.target.value)}\r\n            className=\"text-box\"\r\n          />\r\n          <button onClick={addTextToPDF} className=\"edit-button\">\r\n            ‚úèÔ∏è Insert Text & Download\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {editedPdfUrl && (\r\n        <a href={editedPdfUrl} download=\"edited.pdf\" className=\"download-link\">\r\n          ‚¨áÔ∏è Download Edited PDF\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,WAAW;AACjD,SAASC,WAAW,EAAEC,GAAG,EAAEC,aAAa,QAAQ,SAAS;AACzD,OAAO,6CAA6C;AACpD,OAAO,uCAAuC;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnBT,KAAK,CAACU,mBAAmB,CAACC,SAAS,GACjC,2CAA2CX,KAAK,CAACY,OAAO,oBAAoB;AAE9E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMyB,QAAQ,GAAGxB,MAAM,CAAC,CAAC;EAEzB,MAAMyB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,CAAC,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3B,IAAIF,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,iBAAiB,EAAE;MACrCb,OAAO,CAACU,CAAC,CAAC;IACZ;EACF,CAAC;EAED,MAAMI,qBAAqB,GAAGA,CAAC;IAAEb;EAAS,CAAC,KAAK;IAC9CC,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAED,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAChB,IAAI,EAAE;IACX,MAAMiB,gBAAgB,GAAG,MAAMjB,IAAI,CAACkB,WAAW,CAAC,CAAC;IACjD,MAAMC,MAAM,GAAG,MAAM/B,WAAW,CAACgC,IAAI,CAACH,gBAAgB,CAAC;IACvD,MAAMI,KAAK,GAAGF,MAAM,CAACG,QAAQ,CAAC,CAAC;IAC/B,MAAMC,SAAS,GAAGF,KAAK,CAAC,CAAC,CAAC;IAE1B,MAAMG,IAAI,GAAG,MAAML,MAAM,CAACM,SAAS,CAACnC,aAAa,CAACoC,SAAS,CAAC;IAC5D,MAAM;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAGL,SAAS,CAACM,OAAO,CAAC,CAAC;IAE7CN,SAAS,CAACO,QAAQ,CAAC1B,QAAQ,EAAE;MAC3B2B,CAAC,EAAE,EAAE;MACLC,CAAC,EAAEJ,MAAM,GAAG,GAAG;MACfK,IAAI,EAAE,EAAE;MACRT,IAAI;MACJU,KAAK,EAAE7C,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC;IAEF,MAAM8C,aAAa,GAAG,MAAMhB,MAAM,CAACiB,IAAI,CAAC,CAAC;IACzC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,aAAa,CAAC,EAAE;MAAErB,IAAI,EAAE;IAAkB,CAAC,CAAC;IACnEP,eAAe,CAACgC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC,CAAC;EAC5C,CAAC;EAED,oBACE7C,OAAA;IAAKiD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlD,OAAA;MAAAkD,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtD,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXiC,GAAG,EAAEvC,QAAS;MACdwC,QAAQ,EAAEvC,YAAa;MACvBwC,MAAM,EAAC;IAAiB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAED9C,IAAI,iBACHR,OAAA,CAAAE,SAAA;MAAAgD,QAAA,gBACElD,OAAA;QAAK0D,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAS,CAAE;QAAAV,QAAA,eACxDlD,OAAA,CAACN,QAAQ;UAACc,IAAI,EAAEA,IAAK;UAACqD,aAAa,EAAEtC,qBAAsB;UAAA2B,QAAA,EACxDY,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAACpD,QAAQ,CAAC,EAAE,CAACsD,CAAC,EAAEC,KAAK,kBACxCjE,OAAA,CAACL,IAAI;YAAiBuE,UAAU,EAAED,KAAK,GAAG,CAAE;YAAC9B,KAAK,EAAE;UAAI,GAA7C8B,KAAK,GAAG,CAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAsC,CAC3D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNtD,OAAA;QACEmE,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAExD,QAAS;QAChB4C,QAAQ,EAAGtC,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACE,MAAM,CAACgD,KAAK,CAAE;QAC7CnB,SAAS,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFtD,OAAA;QAAQqE,OAAO,EAAE7C,YAAa;QAACyB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH,EAEAxC,YAAY,iBACXd,OAAA;MAAGsE,IAAI,EAAExD,YAAa;MAACyD,QAAQ,EAAC,YAAY;MAACtB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAEvE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/C,EAAA,CA/EQD,GAAG;AAAAkE,EAAA,GAAHlE,GAAG;AAiFZ,eAAeA,GAAG;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}