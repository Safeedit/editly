{"ast":null,"code":"var _jsxFileName = \"D:\\\\Service Company\\\\safeeditpdf\\\\src\\\\components\\\\PdfToDocx.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DropzoneUpload from \"./DropzoneUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfToDocx() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const convert = async () => {\n    if (!file) return alert(\"üìÑ Please select a PDF to convert.\");\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"type\", \"pdf-to-docx\");\n      const res = await fetch(\"http://localhost:5001/convert\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) {\n        const errText = await res.text();\n        throw new Error(errText || \"Conversion failed\");\n      }\n      const blob = await res.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = file.name.replace(/\\.pdf$/, \".docx\");\n      link.click();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error(\"‚ùå Conversion Error:\", err);\n      alert(\"‚ùå Failed to convert PDF to DOCX: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCC4 Convert PDF \\u27A1\\uFE0F DOCX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropzoneUpload, {\n      onFilesSelected: f => setFile(f),\n      accept: \"application/pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u2705 Selected: \", file.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convert,\n      disabled: loading,\n      children: loading ? \"‚è≥ Converting...\" : \"üìÑ PDF ‚û°Ô∏è DOCX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfToDocx, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = PdfToDocx;\nexport default PdfToDocx;\nvar _c;\n$RefreshReg$(_c, \"PdfToDocx\");","map":{"version":3,"names":["React","useState","DropzoneUpload","jsxDEV","_jsxDEV","PdfToDocx","_s","file","setFile","loading","setLoading","convert","alert","formData","FormData","append","res","fetch","method","body","ok","errText","text","Error","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","name","replace","click","revokeObjectURL","err","console","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilesSelected","f","accept","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Service Company/safeeditpdf/src/components/PdfToDocx.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DropzoneUpload from \"./DropzoneUpload\";\r\n\r\nfunction PdfToDocx() {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const convert = async () => {\r\n    if (!file) return alert(\"üìÑ Please select a PDF to convert.\");\r\n\r\n    setLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"type\", \"pdf-to-docx\");\r\n\r\n      const res = await fetch(\"http://localhost:5001/convert\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errText = await res.text();\r\n        throw new Error(errText || \"Conversion failed\");\r\n      }\r\n\r\n      const blob = await res.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = file.name.replace(/\\.pdf$/, \".docx\");\r\n      link.click();\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (err) {\r\n      console.error(\"‚ùå Conversion Error:\", err);\r\n      alert(\"‚ùå Failed to convert PDF to DOCX: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>üìÑ Convert PDF ‚û°Ô∏è DOCX</h3>\r\n\r\n      <DropzoneUpload\r\n        onFilesSelected={(f) => setFile(f)}\r\n        accept=\"application/pdf\"\r\n      />\r\n\r\n      {file && <p>‚úÖ Selected: {file.name}</p>}\r\n\r\n      <button onClick={convert} disabled={loading}>\r\n        {loading ? \"‚è≥ Converting...\" : \"üìÑ PDF ‚û°Ô∏è DOCX\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PdfToDocx;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}