{"ast":null,"code":"var _jsxFileName = \"D:\\\\Service Company\\\\safeeditpdf\\\\src\\\\components\\\\PdfToDocx.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfToDocx() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const convert = async () => {\n    if (!file) return alert(\"Please upload a PDF file first.\");\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"action\", \"pdf2docx\");\n      const res = await fetch(\"http://localhost:5001/convert\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) {\n        const errText = await res.text();\n        throw new Error(errText || \"Conversion failed\");\n      }\n      const blob = await res.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"converted.docx\";\n      link.click();\n    } catch (err) {\n      console.error(\"Conversion Error:\", err);\n      alert(\"‚ùå Failed to convert PDF to DOCX.\\nMake sure the backend is running.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: e => setFile(e.target.files[0]),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convert,\n      className: \"btn bg-red-500\",\n      disabled: loading,\n      children: loading ? \"Converting...\" : \"üìÑ PDF ‚û°Ô∏è DOCX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfToDocx, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = PdfToDocx;\nexport default PdfToDocx;\nvar _c;\n$RefreshReg$(_c, \"PdfToDocx\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfToDocx","_s","file","setFile","loading","setLoading","convert","alert","formData","FormData","append","res","fetch","method","body","ok","errText","text","Error","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","click","err","console","error","style","marginTop","children","type","accept","onChange","e","target","files","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Service Company/safeeditpdf/src/components/PdfToDocx.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction PdfToDocx() {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const convert = async () => {\r\n    if (!file) return alert(\"Please upload a PDF file first.\");\r\n\r\n    setLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"action\", \"pdf2docx\");\r\n\r\n      const res = await fetch(\"http://localhost:5001/convert\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errText = await res.text();\r\n        throw new Error(errText || \"Conversion failed\");\r\n      }\r\n\r\n      const blob = await res.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = \"converted.docx\";\r\n      link.click();\r\n    } catch (err) {\r\n      console.error(\"Conversion Error:\", err);\r\n      alert(\"‚ùå Failed to convert PDF to DOCX.\\nMake sure the backend is running.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"10px\" }}>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/pdf\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n        className=\"input\"\r\n      />\r\n      <button onClick={convert} className=\"btn bg-red-500\" disabled={loading}>\r\n        {loading ? \"Converting...\" : \"üìÑ PDF ‚û°Ô∏è DOCX\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PdfToDocx;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI,CAACJ,IAAI,EAAE,OAAOK,KAAK,CAAC,iCAAiC,CAAC;IAE1DF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,IAAI,CAAC;MAC7BM,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC;MAErC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QACvDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,GAAG,CAACI,EAAE,EAAE;QACX,MAAMC,OAAO,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAChC,MAAM,IAAIC,KAAK,CAACF,OAAO,IAAI,mBAAmB,CAAC;MACjD;MAEA,MAAMG,IAAI,GAAG,MAAMR,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MAC5C,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,QAAQ,GAAG,gBAAgB;MAChCJ,IAAI,CAACK,KAAK,CAAC,CAAC;IACd,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;MACvCvB,KAAK,CAAC,qEAAqE,CAAC;IAC9E,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKkC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChCpC,OAAA;MACEqC,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,iBAAiB;MACxBC,QAAQ,EAAGC,CAAC,IAAKpC,OAAO,CAACoC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;MAC5CC,SAAS,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACF/C,OAAA;MAAQgD,OAAO,EAAEzC,OAAQ;MAACoC,SAAS,EAAC,gBAAgB;MAACM,QAAQ,EAAE5C,OAAQ;MAAA+B,QAAA,EACpE/B,OAAO,GAAG,eAAe,GAAG;IAAgB;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC7C,EAAA,CAlDQD,SAAS;AAAAiD,EAAA,GAATjD,SAAS;AAoDlB,eAAeA,SAAS;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}