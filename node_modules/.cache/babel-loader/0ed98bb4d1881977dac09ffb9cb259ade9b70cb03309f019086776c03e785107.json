{"ast":null,"code":"var _jsxFileName = \"D:\\\\Service Company\\\\safeeditpdf\\\\src\\\\components\\\\PdfToDocx.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfToDocx() {\n  _s();\n  const [file, setFile] = useState(null);\n  const convert = async () => {\n    if (!file) return alert(\"Upload a PDF file\");\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"action\", \"pdf2docx\");\n      const res = await fetch(\"http://localhost:5001/convert\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) {\n        const errText = await res.text();\n        throw new Error(errText || \"Conversion failed\");\n      }\n      const blob = await res.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"converted.docx\";\n      link.click();\n    } catch (err) {\n      console.error(\"Conversion Error:\", err);\n      alert(\"Failed to convert PDF to DOCX\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convert,\n      children: \"Convert PDF to DOCX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfToDocx, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = PdfToDocx;\nexport default PdfToDocx;\nvar _c;\n$RefreshReg$(_c, \"PdfToDocx\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfToDocx","_s","file","setFile","convert","alert","formData","FormData","append","res","fetch","method","body","ok","errText","text","Error","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","click","err","console","error","children","type","accept","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Service Company/safeeditpdf/src/components/PdfToDocx.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction PdfToDocx() {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const convert = async () => {\r\n    if (!file) return alert(\"Upload a PDF file\");\r\n\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"action\", \"pdf2docx\");\r\n\r\n        const res = await fetch(\"http://localhost:5001/convert\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n        });\r\n\r\n        if (!res.ok) {\r\n        const errText = await res.text();\r\n        throw new Error(errText || \"Conversion failed\");\r\n        }\r\n\r\n        const blob = await res.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.download = \"converted.docx\";\r\n        link.click();\r\n    } catch (err) {\r\n        console.error(\"Conversion Error:\", err);\r\n        alert(\"Failed to convert PDF to DOCX\");\r\n    }\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\"application/pdf\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={convert}>Convert PDF to DOCX</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PdfToDocx;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMO,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI,CAACF,IAAI,EAAE,OAAOG,KAAK,CAAC,mBAAmB,CAAC;IAE5C,IAAI;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;MAC7BI,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC;MAErC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACN,CAAC,CAAC;MAEF,IAAI,CAACG,GAAG,CAACI,EAAE,EAAE;QACb,MAAMC,OAAO,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAChC,MAAM,IAAIC,KAAK,CAACF,OAAO,IAAI,mBAAmB,CAAC;MAC/C;MAEA,MAAMG,IAAI,GAAG,MAAMR,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MAC5C,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,QAAQ,GAAG,gBAAgB;MAChCJ,IAAI,CAACK,KAAK,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;MACvCvB,KAAK,CAAC,+BAA+B,CAAC;IAC1C;EACJ,CAAC;EAGC,oBACEN,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,iBAAiB;MAACC,QAAQ,EAAGC,CAAC,IAAKhC,OAAO,CAACgC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3F1C,OAAA;MAAQ2C,OAAO,EAAEtC,OAAQ;MAAA2B,QAAA,EAAC;IAAmB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACxC,EAAA,CAxCQD,SAAS;AAAA2C,EAAA,GAAT3C,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}